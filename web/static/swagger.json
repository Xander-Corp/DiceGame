{
  "openapi": "3.0.0",
  "info": {
    "description": "API for simulating the Wisconsin Dice game and analyzing results",
    "version": "1.0.0",
    "title": "Wisconsin Dice Game API",
    "contact": {
      "email": "errol.kutan@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/dicegame/api/v1"
    }
  ],
  "tags": [
    {
      "name": "List Strategy Names",
      "description": "API for listing strategies"
    },
    {
      "name": "Describe Strategy",
      "description": "API for describing strategies"
    },
    {
      "name" : "Start Simulation",
      "description": "API for starting a simulation"
    },
    {
      "name" : "Get Simulation Status",
      "description": "Get Simulation status"
    }

  ],
  "paths": {
    "/simulation/strategies": {
      "get": {
        "tags": [
          "List Strategy Names"
        ],
        "summary": "List Strategies",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/strategyListingsResponseBody"
            }
          }
        }
      }
    },
    "/simulation/strategies/{strategyName}/description" : {
      "parameters": [
        {
          "name": "strategyName",
          "in": "path",
          "required": true,
          "description": "Name of the strategy",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Describe Strategy"
        ],
        "summary": "Describe a dice game strategy",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/strategyDescriptionResponseBody"
            }
          }
        }
      }
    },
    "/simulation/startSimulation": {
      "post": {
        "summary": "Start a dice game simulation",
        "tags": [
          "Start Simulation"
        ],
        "requestBody": {
          "description": "Start simulation request object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/startSimulationRequestBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/startSimulationResponseBody"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/simulation/{job_id}/status" : {
      "parameters": [
        {
          "in": "path",
          "name": "job_id",
          "required": true,
          "description": "The id of the simulation job"
        }
      ],
      "get": {
        "tags": [
          "Get Simulation Status"
        ],
        "summary": "Get simulation status",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/simulationStatusResponseBody"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "strategyListingsResponseBody" : {
        "type" : "object",
        "properties" : {
          "strategies" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "strategyDescriptionResponseBody" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "msg" : {
            "type" : "string"
          },
          "strategyName" : {
            "type" : "string"
          }
        }
      },
      "startSimulationRequestBody" : {
        "type" : "object",
        "properties" : {
          "threshold" : {
            "type" : "integer"
          },
          "numSimulations" : {
            "type" : "integer"
          }
        }
      },
      "startSimulationResponseBody" : {
        "type" : "object",
        "properties" : {
          "ok" : {
            "type" : "integer"
          },
          "jobId" : {
            "type" : "string"
          }
        }
      },
      "simulationStatusResponseBody" : {
        "type" : "object",
        "properties" : {
          "ok" : {
            "type" : "integer"
          },
          "jobId" : {
            "type" : "string"
          },
          "jobData" : {
            "type" : "object",
            "properties" : {
              "state" : {
                "type" : "string"
              },
              "lastUpdate" : {
                "type" : "datetTime"
              },
              "logs" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "date" : {
                      "type" : "datetIme"
                    },
                    "log" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}